name: Auto Update project-graph & pixi
on:
  schedule:
    - cron: '30 1 * * *'
  workflow_dispatch:

jobs:
  check-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup jq
        run: sudo apt-get install -y jq

      - name: Get latest version of project-graph
        id: version-check-pg
        run: |
          LATEST_VER=$(curl -s "https://api.github.com/repos/LiRenTech/project-graph/releases/latest" | jq -r '.tag_name | sub("^v"; "")')
          CURRENT_VER=$(jq -r '.version' bucket/project-graph.json)
          echo "latest_version=$LATEST_VER" >> $GITHUB_OUTPUT
          echo "current_version=$CURRENT_VER" >> $GITHUB_OUTPUT
          echo "$CURRENT_VER -> $LATEST_VER"

      - name: Update manifest of project-graph
        if: steps.version-check-pg.outputs.current_version != steps.version-check-pg.outputs.latest_version
        run: |
          DOWNLOAD_URL="https://github.com/LiRenTech/project-graph/releases/download/v${{ steps.version-check.outputs.latest_version }}/Project.Graph_${{ steps.version-check.outputs.latest_version }}_x64-setup.exe"
          HASH=$(curl -L $DOWNLOAD_URL | sha256sum | cut -d' ' -f1)
          CURRENT_VER="${{ steps.version-check.outputs.current_version }}"
          LATEST_VER="${{ steps.version-check.outputs.latest_version }}"

          jq --arg ver "$LATEST_VER" --arg current_ver "$CURRENT_VER" --arg hash "$HASH" '
            .version = $ver |
            .hash = $hash |
            .url = "https://github.com/LiRenTech/project-graph/releases/download/v\($ver)/Project.Graph_\($ver)_x64-setup.exe" |
            (.architecture."64bit".installer.script[], .architecture."64bit".uninstaller.script[]) |= (
              gsub($current_ver; $ver)
            )
          ' bucket/project-graph.json > tmp.json && mv tmp.json bucket/project-graph.json

      - name: Commit changes for project-graph
        if: steps.version-check-pg.outputs.current_version != steps.version-check-pg.outputs.latest_version
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add bucket/project-graph.json
          git commit -m "chore: auto update project-graph to ${{ steps.version-check.outputs.latest_version }}"
          git push

  simple-test:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test project-graph
        run: |
          Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
          Invoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression

          $scoopPath = "$env:USERPROFILE\scoop\shims"
          $env:Path += ";$scoopPath"
          Write-Output "Scoop path: $(Get-Command scoop | Select-Object -ExpandProperty Source)"

          scoop install bucket\project-graph.json
          scoop uninstall project-graph
